<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="422.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="405" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="405" > </text>
<g id="frames">
<g >
<title>__x64_sys_madvise (51,553,212 samples, 0.01%)</title><rect x="970.9" y="293" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="973.92" y="303.5" ></text>
</g>
<g >
<title>tick_sched_handle (177,781,412 samples, 0.04%)</title><rect x="968.6" y="229" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="971.61" y="239.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (52,838,869 samples, 0.01%)</title><rect x="166.8" y="309" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="169.78" y="319.5" ></text>
</g>
<g >
<title>populate_vma_page_range (359,481,299 samples, 0.09%)</title><rect x="971.6" y="245" width="1.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="974.57" y="255.5" ></text>
</g>
<g >
<title>tick_sched_timer (43,464,944 samples, 0.01%)</title><rect x="1183.3" y="261" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1186.32" y="271.5" ></text>
</g>
<g >
<title>__mm_populate (359,481,299 samples, 0.09%)</title><rect x="971.6" y="261" width="1.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="974.57" y="271.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (67,304,340 samples, 0.02%)</title><rect x="1185.3" y="245" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1188.33" y="255.5" ></text>
</g>
<g >
<title>tick_sched_timer (183,698,966 samples, 0.04%)</title><rect x="968.6" y="245" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="971.59" y="255.5" ></text>
</g>
<g >
<title>[perf_4.19] (198,440,095 samples, 0.05%)</title><rect x="1184.1" y="245" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1187.09" y="255.5" ></text>
</g>
<g >
<title>ggml_compute_forward_soft_max (217,663,726 samples, 0.05%)</title><rect x="265.4" y="309" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="268.38" y="319.5" ></text>
</g>
<g >
<title>ggml_compute_forward_mul_mat (16,980,204,186 samples, 4.07%)</title><rect x="12.8" y="325" width="48.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="15.77" y="335.5" >ggml..</text>
</g>
<g >
<title>runtime.systemstack.abi0 (51,228,896 samples, 0.01%)</title><rect x="10.2" y="325" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="13.18" y="335.5" ></text>
</g>
<g >
<title>find_busiest_group (54,330,145 samples, 0.01%)</title><rect x="1185.1" y="165" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1188.08" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (150,230,122 samples, 0.04%)</title><rect x="10.6" y="261" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="13.62" y="271.5" ></text>
</g>
<g >
<title>ggml_axpy_q4_0_q8_0 (33,214,061,505 samples, 7.96%)</title><rect x="167.1" y="309" width="93.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="170.06" y="319.5" >ggml_axpy_q..</text>
</g>
<g >
<title>node::NodeMainInstance::Run (37,194,340 samples, 0.01%)</title><rect x="1183.9" y="277" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1186.92" y="287.5" ></text>
</g>
<g >
<title>ggml_compute_forward_dup (2,511,393,155 samples, 0.60%)</title><rect x="972.8" y="341" width="7.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="975.80" y="351.5" ></text>
</g>
<g >
<title>[unknown] (196,349,918 samples, 0.05%)</title><rect x="10.5" y="325" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.53" y="335.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (37,955,072 samples, 0.01%)</title><rect x="260.9" y="293" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="263.87" y="303.5" ></text>
</g>
<g >
<title>rope_yarn (168,639,510 samples, 0.04%)</title><rect x="970.3" y="325" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="973.35" y="335.5" ></text>
</g>
<g >
<title>[perf_4.19] (182,633,724 samples, 0.04%)</title><rect x="1184.1" y="229" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1187.13" y="239.5" ></text>
</g>
<g >
<title>reduced_sincos (88,399,938 samples, 0.02%)</title><rect x="970.1" y="325" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="973.10" y="335.5" ></text>
</g>
<g >
<title>__handle_mm_fault (209,421,284 samples, 0.05%)</title><rect x="972.0" y="197" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="975.00" y="207.5" ></text>
</g>
<g >
<title>scheduler_tick (106,310,433 samples, 0.03%)</title><rect x="968.8" y="197" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="971.78" y="207.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (162,571,005 samples, 0.04%)</title><rect x="1184.2" y="117" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1187.18" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (170,617,679 samples, 0.04%)</title><rect x="1184.2" y="197" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1187.16" y="207.5" ></text>
</g>
<g >
<title>ggml_compute_forward_mul_mat (195,309,133 samples, 0.05%)</title><rect x="979.9" y="341" width="0.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="982.90" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (56,197,860 samples, 0.01%)</title><rect x="1183.3" y="293" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1186.30" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (36,189,969 samples, 0.01%)</title><rect x="166.9" y="277" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="169.95" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (232,700,738 samples, 0.06%)</title><rect x="968.5" y="277" width="0.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="971.54" y="287.5" ></text>
</g>
<g >
<title>vm_munmap (150,230,122 samples, 0.04%)</title><rect x="10.6" y="245" width="0.4" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="13.62" y="255.5" ></text>
</g>
<g >
<title>ggml_compute_forward_mul_mat_axpy_q4_0 (829,378,156 samples, 0.20%)</title><rect x="262.6" y="309" width="2.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="265.57" y="319.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (39,774,851 samples, 0.01%)</title><rect x="166.9" y="293" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="169.95" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (150,230,122 samples, 0.04%)</title><rect x="10.6" y="293" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.62" y="303.5" ></text>
</g>
<g >
<title>do_munmap (150,230,122 samples, 0.04%)</title><rect x="10.6" y="229" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="13.62" y="239.5" ></text>
</g>
<g >
<title>ggml_graph_compute_thread (72,487,243,746 samples, 17.37%)</title><rect x="62.4" y="325" width="204.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="65.37" y="335.5" >ggml_graph_compute_thread</text>
</g>
<g >
<title>__libc_write (178,582,139 samples, 0.04%)</title><rect x="1184.1" y="213" width="0.5" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1187.14" y="223.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (51,608,230 samples, 0.01%)</title><rect x="1184.2" y="69" width="0.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1187.20" y="79.5" ></text>
</g>
<g >
<title>swapper (1,821,211,433 samples, 0.44%)</title><rect x="1184.8" y="357" width="5.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1187.81" y="367.5" ></text>
</g>
<g >
<title>unmap_page_range (149,563,908 samples, 0.04%)</title><rect x="10.6" y="181" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="13.62" y="191.5" ></text>
</g>
<g >
<title>alloc_set_pte (88,029,877 samples, 0.02%)</title><rect x="972.2" y="165" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="975.25" y="175.5" ></text>
</g>
<g >
<title>llama_sampling_sample (40,667,697 samples, 0.01%)</title><rect x="969.5" y="325" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="972.50" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle (42,409,544 samples, 0.01%)</title><rect x="1183.3" y="245" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1186.32" y="255.5" ></text>
</g>
<g >
<title>ggml_vec_dot_q6_K_q8_K (15,064,289,007 samples, 3.61%)</title><rect x="18.2" y="309" width="42.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="21.18" y="319.5" >ggml..</text>
</g>
<g >
<title>__softirqentry_text_start (36,355,783 samples, 0.01%)</title><rect x="1185.4" y="213" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1188.41" y="223.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (70,903,958 samples, 0.02%)</title><rect x="1185.3" y="261" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1188.32" y="271.5" ></text>
</g>
<g >
<title>__clone (39,240,559 samples, 0.01%)</title><rect x="11.3" y="325" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="14.27" y="335.5" ></text>
</g>
<g >
<title>page_fault (166,692,512 samples, 0.04%)</title><rect x="971.1" y="325" width="0.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="974.10" y="335.5" ></text>
</g>
<g >
<title>__get_user_pages (359,481,299 samples, 0.09%)</title><rect x="971.6" y="229" width="1.0" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="974.57" y="239.5" ></text>
</g>
<g >
<title>intel_idle (41,182,138 samples, 0.01%)</title><rect x="1184.8" y="261" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1187.84" y="271.5" ></text>
</g>
<g >
<title>filemap_map_pages (200,083,131 samples, 0.05%)</title><rect x="972.0" y="181" width="0.6" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="975.01" y="191.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (251,119,128 samples, 0.06%)</title><rect x="1189.1" y="229" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1192.05" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (51,553,212 samples, 0.01%)</title><rect x="970.9" y="309" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="973.92" y="319.5" ></text>
</g>
<g >
<title>__mmap (361,872,517 samples, 0.09%)</title><rect x="971.6" y="341" width="1.0" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="974.57" y="351.5" ></text>
</g>
<g >
<title>cpu_startup_entry (1,652,069,301 samples, 0.40%)</title><rect x="1185.3" y="309" width="4.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1188.29" y="319.5" ></text>
</g>
<g >
<title>ggml_vec_dot_q4_0_q8_0 (235,820,181,676 samples, 56.51%)</title><rect x="302.5" y="325" width="666.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="305.54" y="335.5" >ggml_vec_dot_q4_0_q8_0</text>
</g>
<g >
<title>_IO_vsnprintf (35,986,396 samples, 0.01%)</title><rect x="11.1" y="325" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="14.13" y="335.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (44,418,455 samples, 0.01%)</title><rect x="166.9" y="309" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="169.93" y="319.5" ></text>
</g>
<g >
<title>update_process_times (42,409,544 samples, 0.01%)</title><rect x="1183.3" y="229" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1186.32" y="239.5" ></text>
</g>
<g >
<title>[perf_4.19] (208,840,569 samples, 0.05%)</title><rect x="1184.1" y="261" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1187.08" y="271.5" ></text>
</g>
<g >
<title>cpu_startup_entry (165,421,492 samples, 0.04%)</title><rect x="1184.8" y="309" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1187.82" y="319.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (269,643,497 samples, 0.06%)</title><rect x="968.5" y="293" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="971.53" y="303.5" ></text>
</g>
<g >
<title>new_sync_write (162,571,005 samples, 0.04%)</title><rect x="1184.2" y="133" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1187.18" y="143.5" ></text>
</g>
<g >
<title>node (60,402,333 samples, 0.01%)</title><rect x="1183.9" y="357" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1186.91" y="367.5" ></text>
</g>
<g >
<title>do_idle (165,421,492 samples, 0.04%)</title><rect x="1184.8" y="293" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1187.82" y="303.5" ></text>
</g>
<g >
<title>load_balance (67,676,411 samples, 0.02%)</title><rect x="1185.0" y="181" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1188.04" y="191.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (51,228,896 samples, 0.01%)</title><rect x="10.2" y="309" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="13.18" y="319.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (64,613,377 samples, 0.02%)</title><rect x="1183.3" y="309" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1186.29" y="319.5" ></text>
</g>
<g >
<title>follow_page_pte (58,687,439 samples, 0.01%)</title><rect x="971.8" y="213" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="974.82" y="223.5" ></text>
</g>
<g >
<title>all (417,296,967,927 samples, 100%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (36,051,890 samples, 0.01%)</title><rect x="260.9" y="277" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="263.87" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (361,872,517 samples, 0.09%)</title><rect x="971.6" y="325" width="1.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="974.57" y="335.5" ></text>
</g>
<g >
<title>irq_exit (38,704,560 samples, 0.01%)</title><rect x="1185.4" y="229" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1188.41" y="239.5" ></text>
</g>
<g >
<title>clear_huge_page (149,014,537 samples, 0.04%)</title><rect x="971.1" y="245" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="974.14" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (170,439,140 samples, 0.04%)</title><rect x="1184.2" y="181" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1187.16" y="191.5" ></text>
</g>
<g >
<title>uv_run (36,836,275 samples, 0.01%)</title><rect x="1183.9" y="245" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1186.92" y="255.5" ></text>
</g>
<g >
<title>ggml_compute_forward_add (288,845,791 samples, 0.07%)</title><rect x="261.0" y="309" width="0.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="263.98" y="319.5" ></text>
</g>
<g >
<title>rebalance_domains (79,619,794 samples, 0.02%)</title><rect x="1185.0" y="197" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1188.01" y="207.5" ></text>
</g>
<g >
<title>__libc_start_main (229,567,300 samples, 0.06%)</title><rect x="1184.1" y="325" width="0.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1187.08" y="335.5" ></text>
</g>
<g >
<title>account_user_time (45,618,037 samples, 0.01%)</title><rect x="968.6" y="197" width="0.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="971.61" y="207.5" ></text>
</g>
<g >
<title>ggml_compute_forward_rms_norm (161,569,949 samples, 0.04%)</title><rect x="264.9" y="309" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="267.91" y="319.5" ></text>
</g>
<g >
<title>runtime.gcDrain (51,087,775 samples, 0.01%)</title><rect x="10.2" y="293" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="13.18" y="303.5" ></text>
</g>
<g >
<title>[perf_4.19] (209,031,831 samples, 0.05%)</title><rect x="1184.1" y="277" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1187.08" y="287.5" ></text>
</g>
<g >
<title>ggml_compute_forward_rope_f32.part.66 (375,639,330 samples, 0.09%)</title><rect x="60.8" y="325" width="1.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="63.84" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (51,553,212 samples, 0.01%)</title><rect x="970.9" y="325" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="973.92" y="335.5" ></text>
</g>
<g >
<title>ggml_vec_dot_q4_0_q8_0 (60,350,384,852 samples, 14.46%)</title><rect x="1012.8" y="341" width="170.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1015.85" y="351.5" >ggml_vec_dot_q4_0_q8_0</text>
</g>
<g >
<title>quantize_row_q8_0 (57,927,032 samples, 0.01%)</title><rect x="267.2" y="309" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="270.17" y="319.5" ></text>
</g>
<g >
<title>ggml_compute_forward_mul_mat_sparse (11,406,272,955 samples, 2.73%)</title><rect x="980.5" y="341" width="32.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="983.45" y="351.5" >gg..</text>
</g>
<g >
<title>unmap_vmas (149,563,908 samples, 0.04%)</title><rect x="10.6" y="197" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="13.62" y="207.5" ></text>
</g>
<g >
<title>ggml_vec_dot_f16 (12,400,165,534 samples, 2.97%)</title><rect x="267.5" y="325" width="35.0" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="270.47" y="335.5" >gg..</text>
</g>
<g >
<title>ggml_compute_forward_mul (273,033,882 samples, 0.07%)</title><rect x="261.8" y="309" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="264.80" y="319.5" ></text>
</g>
<g >
<title>copyin (39,658,332 samples, 0.01%)</title><rect x="1184.4" y="53" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1187.44" y="63.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (361,271,149 samples, 0.09%)</title><rect x="971.6" y="293" width="1.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="974.57" y="303.5" ></text>
</g>
<g >
<title>irq_exit (251,836,301 samples, 0.06%)</title><rect x="1189.1" y="245" width="0.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1192.05" y="255.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (74,204,411 samples, 0.02%)</title><rect x="1183.3" y="325" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1186.27" y="335.5" ></text>
</g>
<g >
<title>__madvise (52,686,577 samples, 0.01%)</title><rect x="970.9" y="341" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="973.92" y="351.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (39,260,623 samples, 0.01%)</title><rect x="1184.4" y="37" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1187.44" y="47.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (46,874,961 samples, 0.01%)</title><rect x="1183.3" y="277" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1186.31" y="287.5" ></text>
</g>
<g >
<title>__sincosf_fma (149,603,862 samples, 0.04%)</title><rect x="12.0" y="325" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="15.01" y="335.5" ></text>
</g>
<g >
<title>page_remove_rmap (46,526,645 samples, 0.01%)</title><rect x="10.8" y="165" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="13.82" y="175.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (198,439,654 samples, 0.05%)</title><rect x="11.4" y="325" width="0.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="14.43" y="335.5" ></text>
</g>
<g >
<title>ggml_compute_forward (65,777,200 samples, 0.02%)</title><rect x="12.5" y="325" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="15.52" y="335.5" ></text>
</g>
<g >
<title>quantize_row_q8_0 (151,069,182 samples, 0.04%)</title><rect x="969.7" y="325" width="0.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="972.67" y="335.5" ></text>
</g>
<g >
<title>clear_page_erms (132,495,921 samples, 0.03%)</title><rect x="971.2" y="213" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="974.19" y="223.5" ></text>
</g>
<g >
<title>intel_idle (1,245,786,193 samples, 0.30%)</title><rect x="1185.5" y="261" width="3.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1188.52" y="271.5" ></text>
</g>
<g >
<title>main (414,954,588,048 samples, 99.44%)</title><rect x="10.5" y="357" width="1173.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.53" y="367.5" >main</text>
</g>
<g >
<title>vm_mmap_pgoff (361,271,149 samples, 0.09%)</title><rect x="971.6" y="277" width="1.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="974.57" y="287.5" ></text>
</g>
<g >
<title>ggml_fp32_to_fp16_row (58,331,874 samples, 0.01%)</title><rect x="61.9" y="325" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="64.92" y="335.5" ></text>
</g>
<g >
<title>find_busiest_group (101,221,925 samples, 0.02%)</title><rect x="1189.4" y="165" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1192.35" y="175.5" ></text>
</g>
<g >
<title>ggml_get_n_tasks (100,407,254 samples, 0.02%)</title><rect x="62.1" y="325" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="65.08" y="335.5" ></text>
</g>
<g >
<title>generic_perform_write (158,784,671 samples, 0.04%)</title><rect x="1184.2" y="85" width="0.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1187.19" y="95.5" ></text>
</g>
<g >
<title>task_tick_fair (72,316,837 samples, 0.02%)</title><rect x="968.9" y="181" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="971.86" y="191.5" ></text>
</g>
<g >
<title>__handle_mm_fault (160,062,527 samples, 0.04%)</title><rect x="971.1" y="277" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="974.12" y="287.5" ></text>
</g>
<g >
<title>[unknown] (41,885,105 samples, 0.01%)</title><rect x="1183.9" y="341" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1186.91" y="351.5" ></text>
</g>
<g >
<title>irq_exit (109,560,416 samples, 0.03%)</title><rect x="1185.0" y="245" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1187.96" y="255.5" ></text>
</g>
<g >
<title>runtime.goexit.abi0 (54,743,584 samples, 0.01%)</title><rect x="10.2" y="341" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="13.17" y="351.5" ></text>
</g>
<g >
<title>[perf_4.19] (229,567,300 samples, 0.06%)</title><rect x="1184.1" y="293" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1187.08" y="303.5" ></text>
</g>
<g >
<title>perf_4.19 (230,119,160 samples, 0.06%)</title><rect x="1184.1" y="357" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1187.08" y="367.5" ></text>
</g>
<g >
<title>page_add_file_rmap (53,349,837 samples, 0.01%)</title><rect x="972.3" y="149" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="975.33" y="159.5" ></text>
</g>
<g >
<title>__libc_start_main (37,194,340 samples, 0.01%)</title><rect x="1183.9" y="325" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1186.92" y="335.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (250,389,382 samples, 0.06%)</title><rect x="1189.1" y="213" width="0.7" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1192.05" y="223.5" ></text>
</g>
<g >
<title>do_huge_pmd_anonymous_page (157,497,665 samples, 0.04%)</title><rect x="971.1" y="261" width="0.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="974.12" y="271.5" ></text>
</g>
<g >
<title>reschedule_interrupt (111,165,919 samples, 0.03%)</title><rect x="1185.0" y="261" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1187.96" y="271.5" ></text>
</g>
<g >
<title>__do_page_fault (160,062,527 samples, 0.04%)</title><rect x="971.1" y="309" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="974.12" y="319.5" ></text>
</g>
<g >
<title>node::SpinEventLoop (36,836,275 samples, 0.01%)</title><rect x="1183.9" y="261" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1186.92" y="271.5" ></text>
</g>
<g >
<title>update_process_times (176,772,649 samples, 0.04%)</title><rect x="968.6" y="213" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="971.61" y="223.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (168,289,210 samples, 0.04%)</title><rect x="971.1" y="341" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="974.10" y="351.5" ></text>
</g>
<g >
<title>start_kernel (165,421,492 samples, 0.04%)</title><rect x="1184.8" y="325" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1187.82" y="335.5" ></text>
</g>
<g >
<title>load_balance (144,550,782 samples, 0.03%)</title><rect x="1189.2" y="181" width="0.5" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1192.24" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (150,230,122 samples, 0.04%)</title><rect x="10.6" y="277" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.62" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (160,062,527 samples, 0.04%)</title><rect x="971.1" y="293" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="974.12" y="303.5" ></text>
</g>
<g >
<title>follow_page_mask (62,694,755 samples, 0.02%)</title><rect x="971.6" y="213" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="974.64" y="223.5" ></text>
</g>
<g >
<title>[unknown] (339,623,998,274 samples, 81.39%)</title><rect x="10.5" y="341" width="960.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.53" y="351.5" >[unknown]</text>
</g>
<g >
<title>start_secondary (1,652,069,301 samples, 0.40%)</title><rect x="1185.3" y="325" width="4.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1188.29" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (36,850,261 samples, 0.01%)</title><rect x="11.3" y="309" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="14.27" y="319.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (39,849,971 samples, 0.01%)</title><rect x="1184.4" y="69" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1187.44" y="79.5" ></text>
</g>
<g >
<title>do_syscall_64 (361,872,517 samples, 0.09%)</title><rect x="971.6" y="309" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="974.57" y="319.5" ></text>
</g>
<g >
<title>node::LoadSnapshotDataAndRun (37,194,340 samples, 0.01%)</title><rect x="1183.9" y="293" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1186.92" y="303.5" ></text>
</g>
<g >
<title>[unknown] (229,567,300 samples, 0.06%)</title><rect x="1184.1" y="341" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1187.08" y="351.5" ></text>
</g>
<g >
<title>do_idle (1,652,004,813 samples, 0.40%)</title><rect x="1185.3" y="293" width="4.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1188.29" y="303.5" ></text>
</g>
<g >
<title>zap_page_range (47,579,627 samples, 0.01%)</title><rect x="970.9" y="277" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="973.93" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (214,090,418 samples, 0.05%)</title><rect x="972.0" y="213" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="974.98" y="223.5" ></text>
</g>
<g >
<title>clear_subpage (135,131,172 samples, 0.03%)</title><rect x="971.2" y="229" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="974.18" y="239.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (161,963,761 samples, 0.04%)</title><rect x="1184.2" y="101" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1187.18" y="111.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (159,962,953 samples, 0.04%)</title><rect x="1184.8" y="277" width="0.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1187.82" y="287.5" ></text>
</g>
<g >
<title>runtime.scanobject (40,655,775 samples, 0.01%)</title><rect x="10.2" y="277" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="13.21" y="287.5" ></text>
</g>
<g >
<title>ksys_write (164,719,056 samples, 0.04%)</title><rect x="1184.2" y="165" width="0.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1187.18" y="175.5" ></text>
</g>
<g >
<title>__munmap (150,230,122 samples, 0.04%)</title><rect x="10.6" y="309" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.62" y="319.5" ></text>
</g>
<g >
<title>rebalance_domains (182,606,655 samples, 0.04%)</title><rect x="1189.1" y="197" width="0.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1192.13" y="207.5" ></text>
</g>
<g >
<title>llama_sample_repetition_penalties (63,875,080 samples, 0.02%)</title><rect x="1183.5" y="341" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1186.52" y="351.5" ></text>
</g>
<g >
<title>[perf_4.19] (229,567,300 samples, 0.06%)</title><rect x="1184.1" y="309" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1187.08" y="319.5" ></text>
</g>
<g >
<title>ggml_compute_forward_unary (412,980,766 samples, 0.10%)</title><rect x="266.0" y="309" width="1.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="269.00" y="319.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (1,592,350,927 samples, 0.38%)</title><rect x="1185.3" y="277" width="4.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1188.30" y="287.5" ></text>
</g>
<g >
<title>_nohz_idle_balance (108,350,971 samples, 0.03%)</title><rect x="1185.0" y="213" width="0.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1187.96" y="223.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (291,940,178 samples, 0.07%)</title><rect x="968.5" y="309" width="0.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="971.47" y="319.5" ></text>
</g>
<g >
<title>unmap_region (150,230,122 samples, 0.04%)</title><rect x="10.6" y="213" width="0.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="13.62" y="223.5" ></text>
</g>
<g >
<title>vfs_write (164,171,243 samples, 0.04%)</title><rect x="1184.2" y="149" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1187.18" y="159.5" ></text>
</g>
<g >
<title>reschedule_interrupt (254,567,846 samples, 0.06%)</title><rect x="1189.0" y="261" width="0.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1192.05" y="271.5" ></text>
</g>
<g >
<title>node::Start (37,194,340 samples, 0.01%)</title><rect x="1183.9" y="309" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1186.92" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (193,322,975 samples, 0.05%)</title><rect x="968.6" y="261" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="971.56" y="271.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (109,364,445 samples, 0.03%)</title><rect x="1185.0" y="229" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1187.96" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (36,850,261 samples, 0.01%)</title><rect x="11.3" y="293" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="14.27" y="303.5" ></text>
</g>
<g >
<title>dockerd (54,980,321 samples, 0.01%)</title><rect x="10.2" y="357" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="13.17" y="367.5" ></text>
</g>
<g >
<title>secondary_startup_64 (1,817,490,793 samples, 0.44%)</title><rect x="1184.8" y="341" width="5.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1187.82" y="351.5" ></text>
</g>
</g>
</svg>
